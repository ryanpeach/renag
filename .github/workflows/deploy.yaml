name: Deploy

on:
  push:
    branches:
      - main

jobs:

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: 3.7

      - name: Install Poetry
        uses: dschep/install-poetry-action@v1.2

      # REF: https://medium.com/@vanflymen/blazing-fast-ci-with-github-actions-poetry-black-and-pytest-9e74299dd4a5
      - name: Cache Poetry virtualenv
        uses: actions/cache@v1
        id: cache
        with:
          path: ~/.virtualenvs
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ hashFiles('**/poetry.lock') }}

      # REF: https://medium.com/@vanflymen/blazing-fast-ci-with-github-actions-poetry-black-and-pytest-9e74299dd4a5
      - name: Set Poetry config
        run: |
          poetry config settings.virtualenvs.in-project false
          poetry config settings.virtualenvs.path ~/.virtualenvs

      # Bump version
      - name: Bump version
        uses: jaumann/github-bumpversion-action@v0.0.7

      - name: Install Dependencies
        run: poetry install
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Build Documentation
        run: |
          poetry run make github

      - name: Commit Documentation
        run: |
          git add docs/
          git commit -m "Github Actions documentation build."

      - name: Publish
        env:
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          poetry config pypi-token.pypi $PYPI_PASSWORD
          poetry publish --build

      - name: Push Git
        run: git push
